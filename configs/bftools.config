// nextflow.config

nextflow.enable.configProcessNamesValidation = true

profiles {
  docker {
    docker.runOptions = '-u $(id -u):$(id -g)'
    docker.enabled = true
    docker.fixOwnership = true
    process {
      executor = 'local'
      container = 'bugraoezdemir/bconv:v0.0.6'
      containerOptions = '--entrypoint /bin/bash -c "sleep 10;"'
      // containerOptions = "-B ${baseDir}/bin -B ${params.workdir} -B $PWD -B $HOME"
    }
    workDir = "${params.workdir}/work"
    tmpDir = "${baseDir}/WorkDir/tmp"
  }
  singularity {
    singularity.enabled = true
    singularity.cacheDir = "${params.workdir}/caches/.singularityCache"
    singularity.autoMounts = true
    process {
      executor = 'local'
      container = 'docker://bugraoezdemir/bconv:v0.0.6'
      containerOptions = "-B ${baseDir}/bin -B ${params.workdir} -B $PWD -B $HOME"
    }
    workDir = "${params.workdir}/work"
    tmpDir = "${baseDir}/WorkDir/tmp"
  }
  conda {
    conda.enabled = true
    conda.cacheDir = "${params.workdir}/caches/.condaCache"
    process {
      executor = 'local'
      conda = "${baseDir}/dependencies/environment.yml"
    }
    workDir = "${params.workdir}/work"
    tmpDir = "${baseDir}/WorkDir/tmp"
  }
  mamba {
    conda.useMamba = true
    conda.enabled = true
    conda.cacheDir = "${params.workdir}/caches/.condaCache"
    process {
      executor = 'local'
      conda = "${baseDir}/dependencies/environment.yml"
    }
    workDir = "${params.workdir}/work"
    tmpDir = "${baseDir}/WorkDir/tmp"
  }
  manual {
    process {
      executor = 'local'
    }
    workDir = "${params.workdir}/work"
    tmpDir = "${baseDir}/WorkDir/tmp"
  }
  cluster {
    singularity.enabled = true
    singularity.cacheDir = "${params.workdir}/caches/.singularityCache"
    singularity.autoMounts = true
    process {
      executor = 'slurm'
      scratch = params.use_local_scratch == "True"
      queueSize = params.queue_size
      submitRateLimit = params.submit_rate_limit
      clusterOptions = params.cluster_options
      time = params.time
      container = 'docker://bugraoezdemir/bconv:v0.0.6'
      containerOptions = "-B ${baseDir}/bin -B ${params.workdir} -B $PWD -B $HOME"
    }
    workDir = "${params.workdir}/work"
  }
}

env {
    BIA_SSH_KEY = "${baseDir}/configs/asperaweb_id_dsa.openssh"
    HOMEPATH = "$HOME/.batchconvert"
    PARAMPATH = "$HOME/.batchconvert/params"
    TEMPPATH = "$HOME/.batchconvert/tmp"
}

// cleanup = true
